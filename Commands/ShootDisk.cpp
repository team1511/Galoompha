// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.



#include "ShootDisk.h"
#include "Commands/WaitCommand.h"
#include "MoveKickerForward.h"
#include "RetractKicker.h"
#include "RaiseBlocker.h"
#include "WaitToShoot.h"
#include "DropBlocker.h"
#include "MaintainSpeed.h"

// should these constants really be pulled out?
// this style is rather legible...
#define DROP_TIME 0.5
#define GUARD_LOWER_TIME 0.3
#define PUSHER_OUT_TIME 0.5
#define PUSHER_BACK_TIME 0.3
#define SPEED_TIMEOUT 3.0

ShootDisk::ShootDisk() {
	// Add Commands here:
	// e.g. AddSequential(new Command1());
	//      AddSequential(new Command2());
	// these will run in order.

	// To run multiple commands at the same time,
	// use AddParallel()
	// e.g. AddParallel(new Command1());
	//      AddSequential(new Command2());
	// Command1 and Command2 will run in parallel.

	// A command group will require all of the subsystems that each member
	// would require.
	// e.g. if Command1 requires chassis, and Command2 requires arm,
	// a CommandGroup containing them would require both the chassis and the
	// arm.

	// spin up wheel, wait
	AddSequential(new PrintCommand("Waiting!"));
	AddSequential(new WaittoShoot(), SPEED_TIMEOUT);

	AddParallel(new MaintainSpeed());
	AddSequential(new PrintCommand("Go!!"));
	AddSequential(new WaitCommand(DROP_TIME));
	// wait, drop, wait, kick, wait, retract, wait, raise
	AddSequential(new DropBlocker());
	AddSequential(new WaitCommand(GUARD_LOWER_TIME));
	AddSequential(new MoveKickerForward());
	AddSequential(new WaitCommand(PUSHER_OUT_TIME));
	AddSequential(new RetractKicker());
	AddSequential(new WaitCommand(PUSHER_BACK_TIME));
	AddSequential(new RaiseBlocker());
	AddSequential(new PrintCommand("Done!!!"));
}
